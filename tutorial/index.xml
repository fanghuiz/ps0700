<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Overview on PS0700 Research Methods</title>
    <link>/tutorial/</link>
    <description>Recent content in Overview on PS0700 Research Methods</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; Fanghui Zhao 2019 &lt;i class=&#34;fas fa-tree&#34; style=&#34;color: #40a990;&#34;&gt;&lt;/i&gt;</copyright>
    <lastBuildDate>Sun, 09 Sep 2018 00:00:00 -0400</lastBuildDate>
    
	<atom:link href="/tutorial/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Inferential Statistics</title>
      <link>/tutorial/inference_3_corr/</link>
      <pubDate>Sun, 20 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/tutorial/inference_3_corr/</guid>
      <description> Correlation Formula Pearson&amp;rsquo;s correlation coefficient when applied to a population is commonly represented by the Greek letter $ \rho $ (rho), and may be referred to as the population correlation coefficient or the population Pearson correlation coefficient. Given a pair of random variables $ (X, Y) $, the formula for $ \rho $ is:
$$ \rho_{X, Y} = \frac{\text{cov}(X, Y)}{\sigma_X \sigma_Y} $$
Scatter plot # Base R plot(job_training$edlevel, job_training$sal2)  # ggplot ggplot(data = job_training, aes(x = edlevel, y = sal2)) + geom_point()  </description>
    </item>
    
    <item>
      <title>Descriptive Statistics</title>
      <link>/tutorial/descriptive_1/</link>
      <pubDate>Sat, 05 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/tutorial/descriptive_1/</guid>
      <description>Frequency distributions Frequency table # Base R table(job_training$sex)  ## ## 0 1 ## 227 247  table(job_training$experience)  ## ## 1 2 3 4 ## 114 76 100 184  Histogram # Base R # Default: frequency hist(job_training$sal2)  # Density hist(job_training$sal2, freq = FALSE)  # ggplot2 library(ggplot2) # Default: count ggplot(data = job_training, aes(x = sal2)) + geom_histogram()  ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.</description>
    </item>
    
    <item>
      <title>Getting Started</title>
      <link>/tutorial/set_up/</link>
      <pubDate>Sat, 05 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/tutorial/set_up/</guid>
      <description>Import .dta Data library(haven)  job_training &amp;lt;- read_dta(&amp;quot;data/job_training.teaching.dta&amp;quot;) job_training  ## # A tibble: 474 x 10 ## age edlevel sal1 sal2 treatment sex immigrant experience salchange ## &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl+lbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl+lbl&amp;gt; &amp;lt;dbl+lbl&amp;gt; &amp;lt;dbl&amp;gt; ## 1 28.5 16 0 3216 1 1 0 1 3216 ## 2 40.3 16 4800 8280 1 1 0 4 3480 ## 3 31.1 15 2040 4392 1 1 0 3 2352 ## 4 31.</description>
    </item>
    
    <item>
      <title>Inferential Statistics</title>
      <link>/tutorial/inference_1_ttest/</link>
      <pubDate>Sat, 05 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/tutorial/inference_1_ttest/</guid>
      <description>T-test library(tidyverse)  Compare difference in means job_training %&amp;gt;% group_by(treatment) %&amp;gt;% summarise(mean(salchange))  ## # A tibble: 2 x 2 ## treatment `mean(salchange)` ## &amp;lt;dbl+lbl&amp;gt; &amp;lt;dbl&amp;gt; ## 1 0 1443. ## 2 1 1870.  Are the differences statistically significant
T-test t.test(salchange ~ treatment, data = job_training)  ## ## Welch Two Sample t-test ## ## data: salchange by treatment ## t = -4.4515, df = 432.69, p-value = 1.</description>
    </item>
    
    <item>
      <title>Inferential Statistics</title>
      <link>/tutorial/inference_2_tab/</link>
      <pubDate>Sat, 05 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/tutorial/inference_2_tab/</guid>
      <description>library(tidyverse)  Cross-tabulation Frequency cross tab tab &amp;lt;- job_training %&amp;gt;% select(bigchange, immigrant) %&amp;gt;% table() tab  ## immigrant ## bigchange 0 1 ## 1 162 75 ## 2 208 29  Proportion # by row tab %&amp;gt;% prop.table(1)  ## immigrant ## bigchange 0 1 ## 1 0.6835443 0.3164557 ## 2 0.8776371 0.1223629  # by column tab %&amp;gt;% prop.table(2)  ## immigrant ## bigchange 0 1 ## 1 0.</description>
    </item>
    
  </channel>
</rss>