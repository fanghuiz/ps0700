<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Overview on Political Science Research Methods</title>
    <link>https://fanghuiz.github.io/ps0700/tutorial_stata/</link>
    <description>Recent content in Overview on Political Science Research Methods</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; Fanghui Zhao 2019 &lt;i class=&#34;fas fa-tree&#34; style=&#34;color: #40a990;&#34;&gt;&lt;/i&gt;</copyright>
    <lastBuildDate>Tue, 29 Jan 2019 00:00:00 -0500</lastBuildDate>
    
	<atom:link href="https://fanghuiz.github.io/ps0700/tutorial_stata/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Generating variables</title>
      <link>https://fanghuiz.github.io/ps0700/tutorial_stata/2_2_data_manipulation/</link>
      <pubDate>Wed, 20 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://fanghuiz.github.io/ps0700/tutorial_stata/2_2_data_manipulation/</guid>
      <description>Cloning existing variables I prefer to keep the orignal dataset untouched, so I would usually create a copy of the variables that I&amp;rsquo;m interested in, and work with the copy. There are two ways to do this:
 clonevar orignal_varName clone_varName (preferred)  Exact clone, including data values, labels etc.  gen orignal_varName clone_varName or generate  Only clones the data, not labels   Let&amp;rsquo;s try using the World Value Survey (Wave 6) data.</description>
    </item>
    
    <item>
      <title>Labeling variables</title>
      <link>https://fanghuiz.github.io/ps0700/tutorial_stata/2_3_data_manipulation/</link>
      <pubDate>Wed, 20 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://fanghuiz.github.io/ps0700/tutorial_stata/2_3_data_manipulation/</guid>
      <description>Variable label Variable label helps us to know what the variable is about. This label will also conviently shows up as axis name if we were to draw a graph,
describe happiness  storage display value variable name type format label variable label --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- happiness float %9.0g  We can create labels to describe what the variable is measuring using label variable var_name.
label variable happiness &amp;quot;Feelings of happiness&amp;quot; describe happiness  storage display value variable name type format label variable label --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- happiness float %9.</description>
    </item>
    
    <item>
      <title>Recoding variables</title>
      <link>https://fanghuiz.github.io/ps0700/tutorial_stata/2_1_data_manipulation/</link>
      <pubDate>Wed, 20 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://fanghuiz.github.io/ps0700/tutorial_stata/2_1_data_manipulation/</guid>
      <description>Using recode The most frequent use of recode is to recode the numbers that represent missing values to proper &amp;ldquo;missing value&amp;rdquo; as understood by Stata.
Very often at the coding stage, missing values (e.g. non-response, no available data) are coded as extreme numbers such as 99, -99. However, without telling Stata those numbers represent missing data, Stata will treat them as numerical values, which will create problems in analysis. So we need to recode those values as .</description>
    </item>
    
    <item>
      <title>Univariate Distribution</title>
      <link>https://fanghuiz.github.io/ps0700/tutorial_stata/3_2_eda_univariate_graph/</link>
      <pubDate>Tue, 19 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://fanghuiz.github.io/ps0700/tutorial_stata/3_2_eda_univariate_graph/</guid>
      <description>Bar plot To draw a bar plot, we simply use the command graph bar var.
The default setting for graph bar is to set y-axis as percent. The full command behind the scene is in fact graph bar (percent), where the percent option is omitted by default.
// Default bar plot, percent graph bar, over(Cheibub4Type)    We can change the default setting, and change the y-axis to frequency / count.</description>
    </item>
    
  </channel>
</rss>